version: '3.4'

x-base: &base
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "5"
  # https://docs.docker.com/compose/compose-file/#restart
  restart: ${DOCKER_RESTART:-unless-stopped}

x-proxy: &proxy
  http_proxy: ${http_proxy}
  https_proxy: ${https_proxy}
  no_proxy: ${no_proxy}

volumes:
  es_volume:

services:
  license_scanner:
    <<: *base
    build:
      context: ./license_scanner
      args:
        <<: *proxy
    environment:
      <<: *proxy
      ELASTIC_SEARCH_URL: http://elasticsearch:9200
    ports: [ '3000:3000' ]
    volumes:
      - ./license_scanner:/usr/share/license_scanner
      - ./license_scanner/tmp/scan/cache:/tmp/license_scanner/cache
    depends_on: [ elasticsearch ]

  elasticsearch:
    <<: *base
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELK_VERSION}
    ports: [ '9200:9200', '9300:9300' ]
    volumes:
      - es_volume:/usr/share/elasticsearch/data
    environment:
      # cf.: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-configuration-methods
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      network.host: 0.0.0.0
      node.max_local_storage_nodes: 1
      cluster.name: elastic.licenses
      #bootstrap.memory_lock: 'true'
      discovery.type: single-node

  kibana:
    <<: *base
    image: docker.elastic.co/kibana/kibana-oss:${ELK_VERSION}
    ports: [ '5601:5601' ]
    depends_on: [ elasticsearch ]
    environment:
      # cf.: https://www.elastic.co/guide/en/kibana/current/_configuring_kibana_on_docker.html
      SERVER_NAME: kibana.licenses
      ELASTICSEARCH_URL: http://elasticsearch:9200
      KIBANA_DEFAULTAPPID: dashboard/4d90cbb0-784d-11e8-bbe5-43c7bfedc38e

  provisioner:
    <<: *base
    image: taskrabbit/elasticsearch-dump:v3.3.18
    depends_on: [ elasticsearch ]
    environment:
      ES_URL: http://elasticsearch:9200
    volumes:
      - ./provisioner/:/data/
    entrypoint: /bin/sh
    working_dir: /data
    command: ./import.sh
